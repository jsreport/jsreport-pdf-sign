{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///./studio/main_dev.js","webpack:///./studio/TemplateProperties.js","webpack:///./studio/AssetProperties.js"],"names":["Studio","addPropertiesComponent","TemplateProperties","title","entity","__entitySet","recipe","includes","AssetProperties","name","addApiSpec","template","pdfSign","certificateAsset","encoding","content","certificateAssetShortid","EntityRefSelect","Properties","removeInvalidReferences","props","entities","onChange","updatedAssetItems","Object","keys","filter","k","shortid","length","_id","changePdfSign","change","selected","references","data","assets","reason","v","target","value","enabled","checked","map","foundItems","selectAssets","e","Component","password","passwordRaw","passwordFilled"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = Studio.libraries['react'];","module.exports = Studio;","import TemplateProperties from './TemplateProperties'\r\nimport AssetProperties from './AssetProperties'\r\nimport Studio from 'jsreport-studio'\r\n\r\nStudio.addPropertiesComponent(TemplateProperties.title, TemplateProperties, (entity) => entity.__entitySet === 'templates' && entity.recipe.includes('pdf'))\r\nStudio.addPropertiesComponent(AssetProperties.title, AssetProperties, (entity) => entity.__entitySet === 'assets' && entity.name && entity.name.includes('.p12'))\r\n\r\nStudio.addApiSpec({\r\n  template: {\r\n    pdfSign: {\r\n      certificateAsset: {\r\n        encoding: '...',\r\n        content: '...'\r\n      },\r\n      certificateAssetShortid: '...'\r\n    }\r\n  }\r\n})\r\n","import React, { Component } from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass Properties extends Component {\n  static selectAssets (entities) {\n    return Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets').map((k) => entities[k])\n  }\n\n  componentDidMount () {\n    this.removeInvalidReferences()\n  }\n\n  componentDidUpdate () {\n    this.removeInvalidReferences()\n  }\n\n  removeInvalidReferences () {\n    const { entity, entities, onChange } = this.props\n\n    if (!entity.pdfSign) {\n      return\n    }\n\n    const updatedAssetItems = Object.keys(entities).filter((k) => entities[k].__entitySet === 'assets' && entities[k].shortid === entity.pdfSign.certificateAssetShortid)\n\n    if (updatedAssetItems.length === 0 && entity.pdfSign.certificateAssetShortid) {\n      onChange({\n        _id: entity._id,\n        pdfSign: null\n      })\n    }\n  }\n\n  static title (entity, entities) {\n    if (!entity.pdfSign || !entity.pdfSign.certificateAssetShortid) {\n      return 'pdf sign'\n    }\n\n    const foundItems = Properties.selectAssets(entities).filter((e) => entity.pdfSign.certificateAssetShortid === e.shortid)\n\n    if (!foundItems.length) {\n      return 'pdf sign'\n    }\n\n    return 'pdf sign certificate: ' + foundItems[0].name\n  }\n\n  render () {\n    const { entity, onChange } = this.props\n\n    const pdfSign = entity.pdfSign || {}\n\n    const changePdfSign = (change) => onChange({ ...entity, pdfSign: { ...entity.pdfSign, ...change } })\n\n    return (\n      <div className='properties-section'>\n        <div className='form-group'>\n          <EntityRefSelect\n            headingLabel='Select certificate'\n            value={pdfSign.certificateAssetShortid || ''}\n            onChange={(selected) => changePdfSign({ certificateAssetShortid: selected.length > 0 ? selected[0].shortid : null })}\n            filter={(references) => ({ data: references.assets })}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Reason filled to pdf</label>\n          <input type='text' placeholder='signed...' value={pdfSign.reason} onChange={(v) => changePdfSign({ reason: v.target.value })} />\n        </div>\n        <div className='form-group'>\n          <label>Enabled</label>\n          <input type='checkbox' checked={pdfSign.enabled !== false} onChange={(v) => changePdfSign({ enabled: v.target.checked })} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Properties\n","import React, { Component } from 'react'\r\n\r\nclass Properties extends Component {\r\n  static title (entity, entities) {\r\n    if (!entity.pdfSign) {\r\n      return 'pdf sign'\r\n    }\r\n\r\n    return entity.pdfSign.passwordFilled ? 'pdf sign password filled' : 'pdf sign'\r\n  }\r\n\r\n  render () {\r\n    const { entity, onChange } = this.props\r\n\r\n    const pdfSign = entity.pdfSign || {}\r\n\r\n    const changePdfSign = (change) => onChange({ ...entity, pdfSign: { ...entity.pdfSign, ...change } })\r\n\r\n    let password = pdfSign.passwordRaw\r\n\r\n    if (password == null) {\r\n      password = pdfSign.passwordFilled === true ? '******' : ''\r\n    }\r\n\r\n    return (\r\n      <div className='properties-section'>\r\n        <div className='form-group'><label>password</label>\r\n          <input\r\n            type='password' value={password}\r\n            onChange={(v) => changePdfSign({ passwordRaw: v.target.value })} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Properties\r\n"],"sourceRoot":""}